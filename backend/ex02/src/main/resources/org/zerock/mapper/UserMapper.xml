<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="org.zerock.mapper.UserMapper">
	<insert id="insertUser" parameterType="org.zerock.domain.UserDTO">
	    INSERT INTO users (
	        user_id,
	        password,
	        username,
	        email,
	        is_admin
	    ) VALUES (
	        #{userId,jdbcType=VARCHAR},
	        #{password,jdbcType=VARCHAR},
	        #{username,jdbcType=VARCHAR},
	        #{email,jdbcType=VARCHAR},
	        0
	    )
	</insert>
	<select id="getUserByUserId" resultType="org.zerock.domain.UserDTO">
        SELECT 
            user_id as userId,
            email,
            password,
            username
        FROM users 
        WHERE user_id = #{userId}		
	</select>
    
    <select id="checkUserId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM users WHERE user_id = #{userId}
    </select>
    
    <select id="checkEmail" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM users WHERE email = #{email}
    </select>
    
    <!-- 사용자의 진행 중인 챌린지 조회 -->
    <select id="getUserChallenges" resultType="org.zerock.domain.UserChallengeDTO">
        SELECT 
            c.id,
            c.title as challengeTitle,
            c.duration,
            TO_CHAR(uc.start_date, 'YYYY-MM-DD') as startDate
        FROM user_challenges uc
        JOIN challenges c ON uc.challenge_id = c.id
        WHERE uc.user_id = #{userId}
        AND uc.end_date IS NULL
    </select>
    
    
    <!-- 비밀번호 업데이트 -->
    <update id="updatePassword">
        UPDATE users
        SET password = #{password}
        WHERE user_id = #{userId}
    </update>
    
    <!-- 이메일 업데이트 -->
    <update id="updateEmail">
        UPDATE users
        SET email = #{email}
        WHERE user_id = #{userId}
    </update>
    
    <select id="findById" parameterType="string" resultType="org.zerock.domain.User">
    SELECT user_id AS userId,
           password,
           username,
           created_at AS createdAt,
           email,
           is_admin AS isAdmin
    FROM USERS
    WHERE user_id = #{userId}
    </select>    
    
    
</mapper>